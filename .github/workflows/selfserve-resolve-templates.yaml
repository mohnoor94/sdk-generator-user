name: Resolve Templates

on:
  workflow_dispatch:
    inputs:
      base_templates:
        description: 'Base SDK templates path (without the versioned directories)'
        type: string
        default: 'dummy/base'
      version:
        description: 'Base templates version'
        type: number
        default: 3
      custom_templates:
        description: 'Custom templates path to merge with base templates'
        type: string
        default: 'dummy/folder2'
      combined_templates_key:
        description: 'Key to the combined templates artifact'
        type: string
        default: 'templates'

jobs:
  combine-templates:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Combine templates
        run: |
          echo "Base templates: ${{ inputs.base_templates }}"
          echo "Custom templates: ${{ inputs.custom_templates }}"
          echo "Version: ${{ inputs.version }}"
          echo "Output templates: tmp/templates"

          # Create the output directory if it doesn't exist
          mkdir -p "tmp/templates"

          # List all files in the base templates directory
          base_files=$(find "${{ inputs.base_templates }}" -type f)

          # Function to copy files from a source directory to the output directory
          copy_files() {
            local src_dir=$1
            for base_file in $base_files; do
              relative_path="${base_file#${{ inputs.base_templates }}/}"
              custom_file="${src_dir}/${relative_path}"
              output_file="tmp/templates/${relative_path}"

              echo ">>> Processing $base_file"
              echo "Relative path: $relative_path"
              echo "Custom file: $custom_file"
              echo "Output file: $output_file"
              echo "Custom file exists: $(test -f "$custom_file" && echo "yes" || echo "no")"
              echo "Output file exists: $(test -f "$output_file" && echo "yes" || echo "no")"
              echo "----------------------------------------"

              if [ -f "$custom_file" ]; then
                echo "Copying $custom_file to $output_file"
                mkdir -p "$(dirname "$output_file")"
                cp "$custom_file" "$output_file"
              fi
            done
          }

          # Copy files from base templates
          copy_files "${{ inputs.base_templates }}"

          # Copy files from versioned directories in ascending order
          for ((i=1; i<=${{ inputs.version }}; i++)); do
            versioned_dir="${{ inputs.base_templates }}/v$i"
            echo ">>> Copying files from $versioned_dir"
            copy_files "$versioned_dir"
          done

          # Copy files from custom templates
          echo ">>> Copying files from ${{ inputs.custom_templates }}"
          custom_files=$(find "${{ inputs.custom_templates }}" -type f)
          for custom_file in $custom_files; do
            relative_path="${custom_file#${{ inputs.custom_templates }}/}"
            output_file="tmp/templates/${relative_path}"
            echo "Copying $custom_file to $output_file"
            mkdir -p "$(dirname "$output_file")"
            cp "$custom_file" "$output_file"
          done

          # Display the content of each file in the output directory
          find "tmp/templates" -type f -exec echo "Content of {}:" \; -exec cat {} \; -exec echo \;

      - name: Upload combined templates
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.combined_templates_key }}
          path: tmp/templates