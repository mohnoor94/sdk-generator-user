name: Resolve Templates

on:
  workflow_dispatch:
    inputs:
      base_templates:
        description: 'Base SDK templates path'
        type: string
        default: 'dummy/folder1'
      custom_templates:
        description: 'Custom templates path to merge with base templates'
        type: string
        default: 'dummy/folder2'
      combined_templates_key:
        description: 'Key to the combined templates artifact'
        type: string
        default: 'templates'

jobs:
  read-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Combine templates
        run: |
          echo "Base templates: ${{ inputs.base_templates }}"
          echo "Custom templates: ${{ inputs.custom_templates }}"
          echo "Output templates: tmp/templates"

          # Create the output directory if it doesn't exist
          mkdir -p "tmp/templates"

          # List all files in the base templates directory
          base_files=$(find "${{ inputs.base_templates }}" -type f)

          # For each file in the base templates directory, check if a file with the same name exists in the custom templates directory
          for base_file in $base_files; do
            relative_path="${base_file#${{ inputs.base_templates }}/}"
            custom_file="${{ inputs.custom_templates }}/${relative_path}"
            output_file="tmp/templates/${relative_path}"

            if [ -f "$custom_file" ]; then
              echo "Copying $custom_file to $output_file"
              mkdir -p "$(dirname "$output_file")"
              cp "$custom_file" "$output_file"
            else
              echo "Copying $base_file to $output_file"
              mkdir -p "$(dirname "$output_file")"
              cp "$base_file" "$output_file"
            fi
          done

          # Display the content of each file in the output directory
          find "tmp/templates" -type f -exec echo "Content of {}:" \; -exec cat {} \; -exec echo \;

      - name: Upload combined templates
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.combined_templates_key }}
          path: tmp/templates